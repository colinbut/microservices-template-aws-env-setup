AWSTemplateFormatVersion: 2010-09-09
Description: Template to create the Microservices Template Environment
Parameters:
  KeyName:
    Description: SSH access KeyPair
    # Type: AWS::EC2::KeyPair::KeyName
    Type: String
Mappings:
  RegionMap:
    us-east-1: # N. Virginia
      AMI: ami-0b898040803850657
    us-west-1: # N. California
      AMI: ami-056ee704806822732
    eu-west-1: # Ireland
      AMI: ami-0bbc25e23a7640b9b
    eu-west-2: # London
      AMI: ami-0d8e27447ec2c8410
    ap-southeast-2: # Sydney
      AMI: ami-0dc96254d5535925f
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Join ['', [!Ref "AWS::StackName", "-VPC"]]
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Join ['', [!Ref "AWS::StackName", "-IGW"]]
    DependsOn: VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-PublicSubnetA
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join ['', [!Ref "AWS::StackName", "-PublicRouteTable"]]
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  MicroservicesTemplateLB:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
          - RegionMap
          - !Ref AWS::Region
          - AMI
      SecurityGroupIds:
        - !Ref LoadBalancerSecurityGroup
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: MicroservicesTemplateLoadBalancer
      KeyName: !Ref KeyName
  MicroservicesTemplateWeb01:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
          - RegionMap
          - !Ref AWS::Region
          - AMI
      SecurityGroupIds:
        - !Ref WebDMZSecurityGroup
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: MicroservicesTemplateWeb01
      KeyName: !Ref KeyName
  MicroservicesTemplateWeb02:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
          - RegionMap
          - !Ref AWS::Region
          - AMI
      SecurityGroupIds:
        - !Ref WebDMZSecurityGroup
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: MicroservicesTemplateWeb02
      KeyName: !Ref KeyName
  MicroservicesTemplateWeb03:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
          - RegionMap
          - !Ref AWS::Region
          - AMI
      SecurityGroupIds:
        - !Ref WebDMZSecurityGroup
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: MicroservicesTemplateWeb03
      KeyName: !Ref KeyName
  WebDMZSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable Web Access and SSH 
      GroupName: WebDMZ
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable Web Access and SSH
      GroupName: LoadBalancerDMZ
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
Outputs:
  Web01_ServerDns:
    Value: !GetAtt
      - MicroservicesTemplateWeb01
      - PublicDnsName
  Web02_ServerDns:
    Value: !GetAtt
      - MicroservicesTemplateWeb02
      - PublicDnsName
  Web03_ServerDns:
    Value: !GetAtt
      - MicroservicesTemplateWeb03
      - PublicDnsName
  LB_ServerDns:
    Value: !GetAtt
      - MicroservicesTemplateLB
      - PublicDnsName